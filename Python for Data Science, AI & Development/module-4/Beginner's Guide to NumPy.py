# Beginner's Guide to NumPy

# Основы NumPy
# NumPy - это библиотека для численных и научных вычислений в Python.

# Создание массивов NumPy
# Массивы NumPy можно создавать из списков Python. Они могут быть одномерными или многомерными.

import numpy as np

# Создание одномерного массива
arr_1d = np.array([1, 2, 3, 4, 5])

# Создание двумерного массива
arr_2d = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

# Атрибуты массива
# NumPy массивы имеют полезные атрибуты:

print(arr_2d.ndim)  # ndim: количество измерений массива
print(arr_2d.shape) # shape: размеры массива (количество строк и столбцов)
print(arr_2d.size)  # size: общее количество элементов в массиве

# Индексация и срезы
# Элементы массива NumPy доступны через индексацию и срезы:

print(arr_1d[2])    # Доступ к третьему элементу одномерного массива
print(arr_2d[1, 2]) # Доступ к элементу во второй строке и третьем столбце двумерного массива
print(arr_2d[1])    # Доступ к второй строке двумерного массива
print(arr_2d[:, 1]) # Доступ ко второму столбцу двумерного массива

# Основные операции
# NumPy упрощает базовые операции с массивами:

# Сложение массивов
array1 = np.array([1, 2, 3])
array2 = np.array([4, 5, 6])
result = array1 + array2
print(result)  # [5 7 9]

# Умножение массива на скаляр
array = np.array([1, 2, 3])
result = array * 2
print(result)  # [2 4 6]

# Поэлементное умножение массивов (произведение Адамара)
array1 = np.array([1, 2, 3])
array2 = np.array([4, 5, 6])
result = array1 * array2
print(result)  # [4 10 18]

# Матричное умножение
matrix1 = np.array([[1, 2], [3, 4]])
matrix2 = np.array([[5, 6], [7, 8]])
result = np.dot(matrix1, matrix2)
print(result)
# [[19 22]
#  [43 50]]

# Операции с NumPy
# Вот список операций, которые можно выполнять с использованием NumPy:

# Создание массива: arr = np.array([1, 2, 3, 4, 5])
# Поэлементная арифметика: result = arr1 + arr2
# Арифметика со скалярами: result = arr * 2
# Поэлементные функции: result = np.sqrt(arr)
# Сумма и среднее: total = np.sum(arr), average = np.mean(arr)
# Максимальное и минимальное значения: max_val = np.max(arr), min_val = np.min(arr)
# Изменение формы: reshaped_arr = arr.reshape(2, 3)
# Транспонирование: transposed_arr = arr.T
# Матричное умножение: result = np.dot(matrix1, matrix2)
